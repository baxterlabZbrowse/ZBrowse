{
    "contents" : "library(shiny)\nlibrary(plyr)\nlibrary(rCharts)\nlibrary(xtable)\nlibrary(tools)\n#install shinyIncubator like this (gives progress bar):\n#install.packages(\"devtools\")\n#library(devtools)\n#devtools::install_github(\"shiny-incubator\", \"rstudio\")\n#library(shinyIncubator)\n#options(shiny.maxRequestSize=-1)\n\naddResourcePath('datatables','www/DataTables/')\naddResourcePath('tabletools','www/TableTools/')\naddResourcePath('highcharts','www/highcharts/')\n\n\n#aggTable <- read.table(\"./www/config/data/sigGWASsnpsCombinedIterations.longhorn.allLoc.csv\",sep=\",\",stringsAsFactors=FALSE,head=TRUE)\n#aggTable$negLogP <- -log(aggTable$avgPval,base=10)\n#aggTable$modIncProb = aggTable$numIterations/100\n#aggTable <- aggTable[order(aggTable$chr,aggTable$bp),]\n\n#List of chromsome lengths for various organisms\nchrSize <- list(Corn=c(301354135,237068873,232140174,241473504,217872852,169174353,176764762,175793759,156750706,150189435),\n     Soybean=c(55915595,51656713,47781076,49243852,41936504,50722821,44683157,46995532,46843750,50969635,39172790,40113140,44408971,49711204,50939160,37397385,41906774,62308140,50589441,46773167),\n     Arabidopsis=c(30427671,19698289,23459830,18585056,26975502),\n     Rice=c(43270923,35937250,36413819,35502694,29958434,31248787,29697621,28443022,23012720,23207287,29021106,27531856)\n     )\n\n#much slower way of adding totalBP\n#aggTable <- adply(aggTable,1,function(x){data.frame(totalBP=sum(x$bp,chrSize$bp[chrSize$chr %in% if(x$chr==1) 0 else c(1:(x$chr-1))]))})\n#cumBP<-c(0,cumsum(chrSize[\"Corn\"][[1]]))\n#numeachchr<-aggregate(aggTable$bp,list(aggTable$chr),length)$x\n#adjust<-rep(cumBP[1],numeachchr[1])\n#for (i in 2:max(unique(aggTable$chr))){\n#  adjust<-c(adjust,rep(cumBP[i],numeachchr[i]))\n#}\n#aggTable$totalBP<-aggTable$bp+adjust\n\n#load annotation data files\nannotGeneLoc <- list(Corn=read.table(\"./ZmB73_Canonical_Gene_func_annotations.csv\",sep=\",\",head=TRUE,stringsAsFactors = FALSE),\n                     Soybean=read.delim(\"./mergedSoyAnnotations.modifiedForBrowser.txt\",sep=\"\\t\",head=TRUE,stringsAsFactors=FALSE,na.strings=\"NA\",comment.char=\"\"),\n                     Arabidopsis = read.table(\"./mergedTAIR10Annotations.modifiedForBrowser.txt\",sep=\"\\t\",head=TRUE,stringsAsFactors=FALSE,comment.char=\"\"),\n                     Rice = read.table(\"./RiceOut.txt\",sep=\"\\t\",head=TRUE,stringsAsFactors=FALSE,comment.char=\"\")\n                     )\n\nhelpPopup <- function(title, content, placement=c('right', 'top', 'left', 'bottom'),\n                      trigger=c('click', 'hover', 'focus', 'manual')) {  \n  tagList(\n    singleton(tags$head(tags$script(\"$(function() { $(\\\"[data-toggle='popover']\\\").popover(); })\"))),\n    tags$a(href = \"#\", `data-toggle` = \"popover\", title = title, `data-content` = content,\n           `data-placement` = match.arg(placement, several.ok=TRUE)[1],\n           `data-trigger` = match.arg(trigger, several.ok=TRUE)[1], tags$i(class=\"icon-question-sign\"))\n  )\n}\n\nhelpModal <- function(title, link, content) {\n  html <- sprintf(\"<div id='%s' class='modal hide fade in' style='display: none; '>\n<div class='modal-header'><a class='close' data-dismiss='modal' href='#'>&times;</a>\n<h3>%s</h3>\n</div>\n<div class='modal-body'>%s</div>\n</div>\n<a data-toggle='modal' href='#%s' class='icon-question-sign'></a>\", link, title, content, link)\n  Encoding(html) <- 'UTF-8'\n  HTML(html)\n}\n\n# binding for a text input that only updates when the return key is pressed\nreturnTextInput <- function(inputId, label, value = \"\") {\n  tagList(\n    singleton(tags$head(tags$script(src = \"js/returnTextInputBinding.js\"))),\n    tags$label(label, `for` = inputId),\n    tags$input(id = inputId, type = \"text\", value = value, class = \"returnTextInput\")\n  )\n}\n\n#functions from shiny leaflet example, sets up div columns in page layout\nrow <- function(...) {\n  tags$div(class=\"row\", ...)\n}\n\ncol <- function(width, ...) {\n  tags$div(class=paste0(\"span\", width), ...)\n}\n\n#initiate colors for plot data (these 10 are the highchart defaults)\ncolors <- c('#2f7ed8','#0d233a', '#8bbc21','#910000','#1aadce','#492970','#f28f43','#77a1e5','#c42525','#a6c96a')\n\n#a list of 20 colors from http://stackoverflow.com/questions/470690/how-to-automatically-generate-n-distinct-colors\nmoreColors <- c(\n  '#FFB300', #Vivid Yellow\n  '#803E75', #Strong Purple\n  '#FF6800', #Vivid Orange\n  '#A6BDD7', #Very Light Blue\n  '#C10020', #Vivid Red\n  '#CEA262', #Grayish Yellow\n  '#817066', #Medium Gray\n  '#007D34', #Vivid Green\n  '#F6768E', #Strong Purplish Pink\n  '#00538A', #Strong Blue\n  '#FF7A5C', #Strong Yellowish Pink\n  '#53377A', #Strong Violet\n  '#FF8E00', #Vivid Orange Yellow\n  '#B32851', #Strong Purplish Red\n  '#F4C800', #Vivid Greenish Yellow\n  '#7F180D', #Strong Reddish Brown\n  '#93AA00', #Vivid Yellowish Green\n  '#593315', #Deep Yellowish Brown\n  '#F13A13', #Vivid Reddish Orange\n  '#232C16'  #Dark Olive Green\n)\n\nallColors <- c(moreColors,colors)\n\n#Steps to adding a new organism\n#1) Add organism name to dropbdown list in server.R -> output$organism\n#2) Add chromosome sizes to chrSize list in global.R\n#3a) Modify annotaion file to have at least these column names:\n  #chromosome,transcript_start,tanscript_end\n  #additional columns with id,strand, and description are helpful for the display in step 4\n#3b) Load annotation file into annotGeneLoc in global.R (if annotations are getting too big, this may need to be handled differenlty)\n#4a) Choose a URL that can be built from annotation ID and add to server.R zChart\n#4) Change how annotations are displayed in server.R -> output$zChart -> thisChrAnnot\n\n#arabidopsis genome sizes from TAIR10\n# Chr1  30427671\n# Chr2\t19698289\n# Chr3\t23459830\n# Chr4\t18585056\n# Chr5\t26975502\n# ChrC\t154478\n# ChrM\t366924\n#soybean genome sizes\n# ##species http://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id=3847\n# ##genome-build JGI1.01\n# Gm01  55915595\n# Gm02\t51656713\n# Gm03\t47781076\n# Gm04\t49243852\n# Gm05\t41936504\n# Gm06\t50722821\n# Gm07\t44683157\n# Gm08\t46995532\n# Gm09\t46843750\n# Gm10\t50969635\n# Gm11\t39172790\n# Gm12\t40113140\n# Gm13\t44408971\n# Gm14\t49711204\n# Gm15\t50939160\n# Gm16\t37397385\n# Gm17\t41906774\n# Gm18\t62308140\n# Gm19\t50589441\n# Gm20\t46773167\n\n##########################Code for modifying annotaiton files##########################\n#load soybean annotation data file (the following code was used to make the description columns short enough to easily display in the browser)\n#soyAnnotFile <- read.delim(\"~/Downloads/mergedSoyAnnotations.txt\",sep=\"\\t\",head=TRUE,stringsAsFactors = FALSE,na.strings=\"NA\",comment.char=\"\")\n#soyAnnotFile$TopUniref100DescriptionSmall <- sub(\"UniRef100_\\\\w{6}\\\\s\",\"\\\\1\",soyAnnotFile$TopUniref100Description,perl=T)\n#soyAnnotFile$TopUniref100DescriptionExtraSmall <- (colsplit(soyAnnotFile$TopUniref100DescriptionSmall,split=\"n=\\\\d\",names=c(\"keep\",\"rest\")))[,1]\n#write.table(soyAnnotFile,\"mergedSoyAnnotations.modifiedForBrowser.txt\",sep=\"\\t\",col.names=T,row.names=F)\n#soyAnnotFile <- read.delim(\"../mergedSoyAnnotations.modifiedForBrowser.txt\",sep=\"\\t\",head=TRUE,stringsAsFactors=FALSE,na.strings=\"NA\",comment.char=\"\")\n\n#load arabidopsis annotation file (this code was used to make columns to display in browser)\n#downloaded from ftp://ftp.arabidopsis.org/home/tair/Genes/TAIR10_genome_release/\n#removed Computational_description column from annotaiton file\n#keep only chromsomes 1:5\n#keep only mRNA sequences\n# library(reshape) #for colsplit\n# gffGenes <- read.table(\"~/Documents/TAIR10_GFF3_genes.gff\",head=FALSE,stringsAsFactors=FALSE,sep=\"\\t\")\n# gffGenes$chromosome <- sub(\"Chr\",\"\",gffGenes$V1)\n# gffGenes <- gffGenes[gffGenes$chromosome %in% 1:5,] #filter chloroplast and mitochondiral genes\n# gffGenes <- gffGenes[gffGenes$V3 == \"mRNA\",]\n# gffGenes <- cbind(gffGenes,colsplit(gffGenes$V9,\"Name=|;\",names=c(\"ID\",\"Parent\",\"empty\",\"name\",\"Index\"))[4])\n# colnames(gffGenes)[c(4:5,7)] <- c(\"transcript_start\",\"transcript_end\",\"strand\")\n# geneAnnots <- read.delim(\"~/Documents/TAIR10_functional_descriptions_20130831.txt\",head=TRUE,stringsAsFactors=FALSE,sep=\"\\t\",comment.char=\"\")\n# length(intersect(gffGenes$name,geneAnnots$name))\n# dim(gffGenes) #every mRNA name in gffGenes matches a line in geneAnnots\n# #merge them\n# mergedArabAnnot <- merge(gffGenes,geneAnnots,by=\"name\",all=F,sort=F)\n# mergedArabAnnot <- mergedArabAnnot[,c(\"name\",\"transcript_start\",\"transcript_end\",\"strand\",\"chromosome\",\"short_description\",\"Curator_summary\")]\n# mergedArabAnnot$Curator_summary[mergedArabAnnot$Curator_summary==\"\"] <- NA\n# mergedArabAnnot$short_description[mergedArabAnnot$short_description==\"\"] <- NA\n# mergedArabAnnot$Locus <- sub(\"\\\\.\\\\d\",\"\",mergedArabAnnot$name)\n# \n# #keep only representative gene models\n# repGenes <- read.delim(\"~/Documents/TAIR10_representative_gene_models\",stringsAsFactors=FALSE,head=FALSE)\n# mergedArabAnnot <- mergedArabAnnot[which(mergedArabAnnot$name %in% repGenes$V1),]\n# write.table(mergedArabAnnot,\"mergedTAIR10Annotations.modifiedForBrowser.txt\",sep=\"\\t\",col.names=T,row.names=F,qmethod=\"d\")\n\n",
    "created" : 1409165507203.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "406010782",
    "id" : "23A6791A",
    "lastKnownWriteTime" : 1410213390,
    "path" : "~/Dropbox/GWASbrowser/interactiveGWASuploadable/global.R",
    "project_path" : "global.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}